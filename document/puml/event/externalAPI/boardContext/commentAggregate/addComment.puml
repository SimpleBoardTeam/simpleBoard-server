@startuml addCommentSecq
title Add comment

actor Client
participant CommentCommandController
participant CommentCommandService
participant PostQueryRepository #yellow
participant CommentCommandRepository
entity      Comment
participant DomainEventPublisher #skyblue


Client -> CommentCommandController : POST\n/comments?postId={postId}
CommentCommandController -> CommentCommandService : createComment(userId, postId, cmd)

CommentCommandService -> PostQueryRepository : existById(postId)
alt Post exist
PostQueryRepository --> CommentCommandService : true

CommentCommandService -> Comment : Comment.write(userId, PostId, cmd)
activate Comment
Comment --> CommentCommandService : Comment Created
deactivate Comment

CommentCommandService -> CommentCommandRepository : save(Comment)
CommentCommandRepository --> CommentCommandService : CommentDetailDTO

CommentCommandService -> DomainEventPublisher : publish(CommentCreatedEvent)

CommentCommandService --> CommentCommandController : CommentCreateResult
CommentCommandController --> Client :  201 Created + CommentCreateResponse

else Post not exist
PostQueryRepository --> Client : POST_NOT_EXIST
end

'!include ../../../eventHandling/boardContext/postAggregate/CommentCreatedHandle.puml
'
@enduml
