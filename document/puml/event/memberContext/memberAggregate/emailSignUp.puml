@startuml
actor User
participant AuthController
participant AuthService
participant AuthRepository
entity AuthCredential
entity Nickname
entity Password
participant MemberService
participant MemberCommandRepository
entity Member

User -> AuthController : POST /auth/email/signup \n(회원가입 요청 바디)
AuthController -> AuthService : signUp(request)

AuthService -> Nickname : validate(request.nickname)
activate Nickname
Nickname --> AuthService : valid or throws
deactivate Nickname

AuthService -> Password : validate(request.password)
activate Password
Password --> AuthService : valid or throws
deactivate Password

AuthService -> Password : encode(request.password)
activate Password
Password --> AuthService : encodedPassword
deactivate Password

AuthService -> MemberService : createMember(nickname, gender, birthyear)

MemberService -> Member : Member.create(...)
activate Member
Member --> MemberService : Member Created
deactivate Member

MemberService -> MemberCommandRepository : save(member)
MemberCommandRepository --> MemberService : memberId
MemberService --> AuthService : memberId

AuthService -> AuthCredential : AuthCredential.create(email,memberId, encodedPassword)
activate AuthCredential
AuthCredential --> AuthService : AuthCredential Created
deactivate AuthCredential

AuthService -> AuthRepository : save(authCredential)
AuthRepository --> AuthService : authCredentialId

AuthService --> AuthController : 가입 성공 응답
AuthController --> User : HTTP 201 Created
@enduml